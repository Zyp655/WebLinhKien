@model Web_LinhKien.Models.ForgotPasswordViewModel

@{
ViewData["Title"] = "Quên mật khẩu";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <h2>Quên mật khẩu?</h2>
        <hr />

        @* Phần 1: Form nhập Email/PhoneNumber *@
        <div id="forgotPasswordForm">
            <form id="sendOtpForm" asp-controller="Account" asp-action="ForgotPassword" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="EmailOrPhoneNumber"></label>
                    <input asp-for="EmailOrPhoneNumber" class="form-control" />
                    <span asp-validation-for="EmailOrPhoneNumber" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Gửi mã xác thực</button>
                <div id="otpMessage" class="mt-2 text-info" style="display:none;"></div>
            </form>
            <p class="mt-3">
                <a asp-controller="Account" asp-action="Login">Quay lại trang đăng nhập</a>
            </p>
        </div>

        @* Phần 2: Form nhập OTP và Mật khẩu mới (ban đầu ẩn) *@
        <div id="resetPasswordForm" style="display:none;">
            <p class="text-success">Mã xác thực đã được gửi. Vui lòng kiểm tra email của bạn.</p>
            <form id="verifyOtpForm" asp-controller="Account" asp-action="ResetPassword" method="post">
                @Html.AntiForgeryToken() @* <-- THÊM DÒNG NÀY ĐỂ TẠO ANTI-FORGERY TOKEN *@
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" id="userIdHidden" name="UserId" /> @* Dùng để truyền UserId *@
                <input type="hidden" id="emailHidden" name="Email" /> @* Dùng để truyền Email/Phone *@

                <div class="form-group mb-3">
                    <label for="verificationCode">Mã xác thực (OTP)</label>
                    <input type="text" id="verificationCode" name="VerificationCode" class="form-control" />
                    <span id="verificationCodeValidation" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="newPassword">Mật khẩu mới</label>
                    <input type="password" id="newPassword" name="Password" class="form-control" />
                    <span id="passwordValidation" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="confirmNewPassword">Xác nhận mật khẩu mới</label>
                    <input type="password" id="confirmNewPassword" name="ConfirmPassword" class="form-control" />
                    <span id="confirmPasswordValidation" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Đặt lại mật khẩu</button>
            </form>
            <div id="resetErrorMessage" class="mt-2 text-danger" style="display:none;"></div>
        </div>
    </div>
</div>

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script>
    $(function () {
        // Xử lý form gửi OTP
        $('#sendOtpForm').submit(function (e) {
            e.preventDefault(); // Ngăn chặn form submit mặc định

            var formData = $(this).serialize(); // Lấy dữ liệu form
            var emailOrPhoneNumber = $('#EmailOrPhoneNumber').val(); // Lấy giá trị email/phone

            $.ajax({
                url: '@Url.Action("ForgotPassword", "Account")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    $('#otpMessage').hide().removeClass('text-success text-danger text-info');
                    if (response.success) {
                        $('#otpMessage').text(response.message).addClass('text-success').show();
                        // Lưu userId và email/phone vào các input hidden của form thứ 2
                        $('#userIdHidden').val(response.userId);
                        $('#emailHidden').val(emailOrPhoneNumber); // Lưu email/phone vào input hidden

                        // Ẩn form gửi OTP, hiện form nhập mã và mật khẩu
                        $('#forgotPasswordForm').hide();
                        $('#resetPasswordForm').show();
                    } else {
                        // Cập nhật để hiển thị lỗi từ server một cách chính xác
                        var errorMessage = response.message || 'Đã xảy ra lỗi khi gửi mã xác thực.';
                        $('#otpMessage').text(errorMessage).addClass('text-danger').show();
                    }
                },
                error: function (xhr, status, error) {
                    $('#otpMessage').text('Đã xảy ra lỗi khi gửi mã xác thực. Vui lòng thử lại.').addClass('text-danger').show();
                    console.error("AJAX Error: ", status, error, xhr.responseText); // Log thêm responseText để gỡ lỗi
                }
            });
        });

        // Xử lý form xác nhận OTP và đặt lại mật khẩu
        $('#verifyOtpForm').submit(function (e) {
            e.preventDefault(); // Ngăn chặn form submit mặc định

            var userId = $('#userIdHidden').val();
            var email = $('#emailHidden').val(); // Lấy email từ input hidden
            var verificationCode = $('#verificationCode').val();
            var password = $('#newPassword').val();
            var confirmPassword = $('#confirmNewPassword').val();

            // Lấy Anti-forgery Token từ form
            var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

            // Clear previous validation messages
            $('.text-danger').text('');
            $('#resetErrorMessage').hide();

            // Client-side validation for the second form
            var isValid = true;
            if (!verificationCode) {
                $('#verificationCodeValidation').text('Mã xác thực là bắt buộc.');
                isValid = false;
            } else if (verificationCode.length !== 6 || !/^\d+$/.test(verificationCode)) {
                $('#verificationCodeValidation').text('Mã xác thực phải có 6 chữ số.');
                isValid = false;
            }

            if (!password) {
                $('#passwordValidation').text('Mật khẩu mới là bắt buộc.');
                isValid = false;
            } else if (password.length < 6) {
                $('#passwordValidation').text('Mật khẩu phải dài ít nhất 6 ký tự.');
                isValid = false;
            }

            if (!confirmPassword) {
                $('#confirmPasswordValidation').text('Xác nhận mật khẩu là bắt buộc.');
                isValid = false;
            } else if (password !== confirmPassword) {
                $('#confirmPasswordValidation').text('Mật khẩu và xác nhận mật khẩu không khớp.');
                isValid = false;
            }

            if (!isValid) {
                return; // Stop if client-side validation fails
            }

            // Gửi dữ liệu bằng AJAX
            $.ajax({
                url: '@Url.Action("ResetPassword", "Account")', // Gửi đến action ResetPassword POST
                type: 'POST',
                data: {
                    __RequestVerificationToken: antiForgeryToken, // <-- THÊM ANTI-FORGERY TOKEN
                    UserId: userId, // <-- THÊM UserId
                    Email: email,
                    VerificationCode: verificationCode,
                    Password: password,
                    ConfirmPassword: confirmPassword
                },
                success: function (response) {
                    if (response.success) {
                        // Chuyển hướng đến trang thành công nếu Controller trả về success
                        window.location.href = response.redirectToUrl;
                    } else {
                        // Hiển thị lỗi chung
                        $('#resetErrorMessage').text(response.message).show();
                        // Hiển thị lỗi cụ thể cho từng trường nếu có
                        if (response.errors) {
                            for (var key in response.errors) {
                                if (response.errors.hasOwnProperty(key)) {
                                    // key có thể là "VerificationCode", "Password", "ConfirmPassword"
                                    // Hoặc "General" nếu là lỗi chung từ IdentityResult
                                    if (key === "General") {
                                        $('#resetErrorMessage').append('<br>' + response.errors[key].join('<br>'));
                                    } else {
                                        // Tìm span validation tương ứng và hiển thị lỗi
                                        var validationSpanId = key.charAt(0).toLowerCase() + key.slice(1) + 'Validation'; // Chuyển đổi để khớp với ID span
                                        $('#' + validationSpanId).text(response.errors[key].join(', '));
                                    }
                                }
                            }
                        }
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = 'Đã xảy ra lỗi khi đặt lại mật khẩu. Vui lòng thử lại.';
                    if (xhr.status === 400) { // Bad Request, có thể do Anti-forgery Token hoặc Model Binding
                        errorMessage = 'Yêu cầu không hợp lệ. Vui lòng thử lại hoặc liên hệ hỗ trợ.';
                    }
                    $('#resetErrorMessage').text(errorMessage).show();
                    console.error("AJAX Error: ", status, error, xhr.responseText); // Log thêm responseText để gỡ lỗi
                }
            });
        });
    });
</script>
}